// <auto-generated />
using System;
using Estacionamento_entity.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Estacionamentoentity.Migrations
{
    [DbContext(typeof(DbContexto))]
    [Migration("20230104223953_migrations")]
    partial class migrations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Estacionamento_entity.Models.Carro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Marca")
                        .HasColumnType("int")
                        .HasColumnName("marca");

                    b.Property<int>("Modelo")
                        .HasColumnType("int")
                        .HasColumnName("modelo");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("carros");
                });

            modelBuilder.Entity("Estacionamento_entity.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(150)")
                        .HasColumnName("email");

                    b.Property<string>("Endereco")
                        .HasColumnType("text")
                        .HasColumnName("endereco");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome");

                    b.Property<string>("Telefone")
                        .HasColumnType("varchar(11)")
                        .HasColumnName("telefone");

                    b.HasKey("Id");

                    b.ToTable("clientes");
                });

            modelBuilder.Entity("Estacionamento_entity.Models.Configuracao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DiasDeLocacao")
                        .HasColumnType("int")
                        .HasColumnName("diasDeLocacao");

                    b.HasKey("Id");

                    b.ToTable("configuracoes");
                });

            modelBuilder.Entity("Estacionamento_entity.Models.Marca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("marcas");
                });

            modelBuilder.Entity("Estacionamento_entity.Models.Modelo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("modelos");
                });

            modelBuilder.Entity("Estacionamento_entity.Models.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Carro")
                        .HasColumnType("int")
                        .HasColumnName("Carro");

                    b.Property<DateOnly>("DataEntrega")
                        .HasColumnType("date")
                        .HasColumnName("DataEntrega");

                    b.Property<DateOnly>("DataLocacao")
                        .HasColumnType("date")
                        .HasColumnName("DataLocacao");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("IdCliente");

                    b.HasKey("Id");

                    b.ToTable("pedidos");
                });
#pragma warning restore 612, 618
        }
    }
}
